# JavaScript/TypeScript pre-commit hooks configuration

repos:
  # JavaScript/TypeScript linting
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        types: [file]
        additional_dependencies:
          - eslint@8.56.0
          - '@typescript-eslint/eslint-plugin@6.19.0'
          - '@typescript-eslint/parser@6.19.0'
          - 'eslint-plugin-security@2.1.0'
          - 'eslint-plugin-import@2.29.0'
          - 'eslint-plugin-jest@27.6.0'
          - 'eslint-plugin-node@11.1.0'
          - 'eslint-plugin-prettier@5.1.0'

  # Prettier for code formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.1
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, json, css, scss, html, yaml, yml, markdown]

  # TypeScript compilation check
  - repo: local
    hooks:
      - id: typescript-compile
        name: TypeScript Compilation Check
        entry: npx tsc --noEmit
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false

  # npm audit for dependency vulnerabilities
  - repo: local
    hooks:
      - id: npm-audit
        name: npm audit
        entry: npm audit --audit-level=moderate
        language: system
        files: package-lock\.json$
        pass_filenames: false

  # Package.json validation
  - repo: local
    hooks:
      - id: package-json-validate
        name: Package.json validation
        entry: node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"
        language: system
        files: package\.json$
        pass_filenames: false

  # Jest tests (if test files exist)
  - repo: local
    hooks:
      - id: jest-tests
        name: Jest Tests
        entry: npm test
        language: system
        files: \.(test|spec)\.(js|jsx|ts|tsx)$
        pass_filenames: false
        always_run: false 